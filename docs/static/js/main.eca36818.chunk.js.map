{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","Categories","useState","inputValue","setInputValue","onSubmit","e","console","log","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAExC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,qCACI,8CACA,sBAAMC,SAZO,SAACC,GAClBC,QAAQC,IAAIP,GACZK,EAAEG,iBACEN,EAAWO,OAAOC,OAAS,IAC3BX,GAAc,SAAAY,GAAI,4BAAQA,GAAR,CAAcT,OAChCC,EAAc,MAOd,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAnBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,gB,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCF,EADnC,8DAEAG,MAAMD,GAFN,cAEbE,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAGzCb,QAAQC,IAAIiB,GAXO,kBAYZA,GAZY,4CAAH,sDCYLO,MAVf,YAAuC,EAAjBJ,GAAkB,IAAdC,EAAa,EAAbA,MAAOT,EAAM,EAANA,IAE7B,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAA4B,IAA3BlB,EAA0B,EAA1BA,SACrB,GAD+C,EAAhBjB,WCFP,SAACiB,GACzB,MAA0BhB,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPvB,EAAQC,GAAUuB,MAAM,SAAAC,GACpBnC,QAAQC,IAAIkC,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACnB,IAEGoB,EDbiBK,CAAazB,IAA9BM,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QA8Bb,OACI,sBAAKJ,UAAU,6CAAf,UACKI,GAAW,mBAAGJ,UAAU,oCAAb,qBACZ,6BAEYT,EAAKE,KAAI,SAAAC,GAAG,OAER,aADA,CACC,EAAD,eAESA,GADEA,EAAIC,aExC9BgB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB7C,EAAnB,KAKA,OACI,qCACI,4CACA,cAAC,EAAD,CAAaA,cAAgBA,EAAgBC,WAAY4C,IACzD,uBAEA,6BAEQA,EAAWnB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAASA,SAAWA,EAAUjB,WAAY4C,aCdlEC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.eca36818.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, {useState} from 'react'\r\n\r\n\r\nexport const AddCategory = ({setCategories, Categories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        console.log(Categories);\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [...cats, inputValue]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Add Category</h2>\r\n            <form onSubmit={handleSubmit}> \r\n                <input\r\n                    type=\"text\"\r\n                    value= {inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=5&api_key=fqtsIAEerELD64WRhMv5a8FhI4mZJdVJ`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json();\r\n    const gifs  = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs);\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nfunction GifGridItem({id, title, url}) {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n// import {getGifs} from '../helpers/getGifs'\r\n\r\nexport const GifGrid = ({category, Categories}) => {\r\n    const {data, loading} = useFetchGifs(category); \r\n\r\n    // console.log('Hola',state);\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect( () => {\r\n    //     getGifs(category).then(\r\n    //         imgs => setImages(imgs)\r\n    //     )\r\n    // }, [])\r\n\r\n    // const getGifs = async(category) => {\r\n//         const url = `https://api.giphy.com/v1/gifs/search?q=${category}&api_key=fqtsIAEerELD64WRhMv5a8FhI4mZJdVJ`\r\n//         const resp = await fetch(url)\r\n//         const {data} = await resp.json();\r\n//         const gifs  = data.map(img => {\r\n//             return {\r\n//                 id: img.id,\r\n//                 title: img.title,\r\n//                 url: img.images.downsized_medium.url\r\n//             }\r\n//         })\r\n//         console.log(gifs);\r\n// ;\r\n//         setImages(gifs)\r\n    // }\r\n\r\n    // getGifs();\r\n\r\n\r\n    return (\r\n        <div className=\"cardGrid animate__animated animate__fadeIn\">\r\n            {loading && <p className=\"animate__animated animate__fadeIn\">Loading</p>}\r\n            <ol>\r\n                    {\r\n                        data.map(img => (\r\n                            // <li key={img.id}>{img.title}</li>\r\n                            <GifGridItem\r\n                                key= { img.id} \r\n                                { ...img } \r\n                            />\r\n                        ))\r\n                    }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category).then( imgs => {\r\n            console.log(imgs);\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    // const categories = ['Dragon Ball', 'Naruto', 'One Piece']\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    // const handledAdd = () => {\r\n    //     setCategory([...categories, 'One Push Man'])\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>Gif Expert</h2>\r\n            <AddCategory setCategories={ setCategories } Categories={categories} />\r\n            <hr/>\r\n            {/* <button onClick={handledAdd  }>+Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid category= {category} Categories={categories} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}